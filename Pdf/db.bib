@incollection{HuHybrid2016,
	title = {Hybrid {{Session Verification Through Endpoint API Generation}}},
	booktitle = {Fundamental {{Approaches}} to {{Software Engineering}}},
	author = {Hu, Raymond and Yoshida, Nobuko},
	editor = {Stevens, Perdita and W{\k{a}}sowski, Andrzej},
	year = {2016},
	volume = {9633},
	pages = {401--418},
	publisher = {{Springer Berlin Heidelberg}},
	address = {{Berlin, Heidelberg}},
	doi = {10.1007/978-3-662-49665-7\_24},
	urldate = {2023-05-22},
	isbn = {978-3-662-49664-0 978-3-662-49665-7},
	langid = {english},
}

@article{HondaMultiparty2016,
	title = {Multiparty {{Asynchronous Session Types}}},
	author = {Honda, Kohei and Yoshida, Nobuko and Carbone, Marco},
	year = {2016},
	month = mar,
	journal = {Journal of the ACM},
	volume = {63},
	number = {1},
	pages = {1--67},
	issn = {0004-5411, 1557-735X},
	doi = {10.1145/2827695},
	urldate = {2023-05-22},
	langid = {english},
}

@incollection{HuSessionBased2008,
	title = {Session-{{Based Distributed Programming}} in {{Java}}},
	booktitle = {{{ECOOP}} 2008 \textendash{} {{Object-Oriented Programming}}},
	author = {Hu, Raymond and Yoshida, Nobuko and Honda, Kohei},
	editor = {Vitek, Jan},
	year = {2008},
	volume = {5142},
	pages = {516--541},
	publisher = {{Springer Berlin Heidelberg}},
	address = {{Berlin, Heidelberg}},
	issn = {0302-9743, 1611-3349},
	doi = {10.1007/978-3-540-70592-5\_22},
	urldate = {2023-05-22},
	isbn = {978-3-540-70591-8 978-3-540-70592-5},
	langid = {english},
}


@incollection{BocchiMultiparty2013,
	title = {A {{Multiparty Multi-session Logic}}},
	booktitle = {Trustworthy {{Global Computing}}},
	author = {Bocchi, Laura and Demangeon, Romain and Yoshida, Nobuko},
	editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and
	Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor,
	Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and
	Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y.
	and Weikum, Gerhard and Palamidessi, Catuscia and Ryan, Mark D.},
	year = {2013},
	volume = {8191},
	pages = {97--111},
	publisher = {{Springer Berlin Heidelberg}},
	address = {{Berlin, Heidelberg}},
	doi = {10.1007/978-3-642-41157-1\_7},
	urldate = {2023-05-24},
	isbn = {978-3-642-41156-4 978-3-642-41157-1},
}

@book{SchneierApplied2015,
	title = {Applied {{Cryptography}}, {{Second Edition}}: {{Protocols}},
	{{Algorithms}}, and {{Source Code}} in {{C}}},
	shorttitle = {Applied {{Cryptography}}, {{Second Edition}}},
	author = {Schneier, Bruce},
	year = {2015},
	month = oct,
	publisher = {{John Wiley \& Sons, Inc.}},
	address = {{Indianapolis, Indiana}},
	doi = {10.1002/9781119183471},
	urldate = {2023-07-03},
	isbn = {978-1-119-18347-1 978-0-471-12845-8},
	langid = {english}
}


@inproceedings{NeykovaSession2018,
	title = {A Session Type Provider: Compile-Time {{API}} Generation of
	Distributed Protocols with Refinements in {{F}}\#},
	shorttitle = {A Session Type Provider},
	booktitle = {Proceedings of the 27th {{International Conference}} on
	{{Compiler Construction}}},
	author = {Neykova, Rumyana and Hu, Raymond and Yoshida, Nobuko and
	Abdeljallal, Fahd},
	year = {2018},
	month = feb,
	pages = {128--138},
	publisher = {{ACM}},
	address = {{Vienna Austria}},
	doi = {10.1145/3178372.3179495},
	urldate = {2023-05-23},
	isbn = {978-1-4503-5644-2},
	langid = {english},
}

@incollection{NeykovaSPY2013,
	title = {{{SPY}}: {{Local Verification}} of {{Global Protocols}}},
	shorttitle = {{{SPY}}},
	booktitle = {Runtime {{Verification}}},
	author = {Neykova, Rumyana and Yoshida, Nobuko and Hu, Raymond},
	editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and
	Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor,
	Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and
	Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y.
	and Weikum, Gerhard and Legay, Axel and Bensalem, Saddek},
	year = {2013},
	volume = {8174},
	pages = {358--363},
	publisher = {{Springer Berlin Heidelberg}},
	address = {{Berlin, Heidelberg}},
	doi = {10.1007/978-3-642-40787-1\_25},
	urldate = {2023-05-24},
	isbn = {978-3-642-40786-4 978-3-642-40787-1},
}

@incollection{DemangeonNested2012,
	title = {Nested {{Protocols}} in {{Session Types}}},
	booktitle = {{{CONCUR}} 2012 \textendash{} {{Concurrency Theory}}},
	author = {Demangeon, Romain and Honda, Kohei},
	editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and
	Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor,
	Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and
	Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y.
	and Weikum, Gerhard and Koutny, Maciej and Ulidowski, Irek},
	year = {2012},
	volume = {7454},
	pages = {272--286},
	publisher = {{Springer Berlin Heidelberg}},
	address = {{Berlin, Heidelberg}},
	doi = {10.1007/978-3-642-32940-1\_20},
	urldate = {2023-05-22},
	isbn = {978-3-642-32939-5 978-3-642-32940-1},
}

@inproceedings{GayModular2010,
  title = {Modular Session Types for Distributed Object-Oriented Programming},
  booktitle = {Proceedings of the 37th Annual {{ACM SIGPLAN-SIGACT}} Symposium on {{Principles}} of Programming Languages},
  author = {Gay, Simon J. and Vasconcelos, Vasco T. and Ravara, Ant{\'o}nio and Gesbert, Nils and Caldeira, Alexandre Z.},
  year = {2010},
  month = jan,
  series = {{{POPL}} '10},
  pages = {299--312},
  publisher = {{Association for Computing Machinery}},
  address = {{New York, NY, USA}},
  doi = {10.1145/1706299.1706335},
  urldate = {2023-11-03},
  abstract = {Session types allow communication protocols to be specified type-theoretically so that protocol implementations can be verified by static type-checking. We extend previous work on session types for distributed object-oriented languages in three ways. (1) We attach a session type to a class definition, to specify the possible sequences of method calls. (2) We allow a session type (protocol) implementation to be modularized , i.e. partitioned into separately-callable methods. (3) We treat session-typed communication channels as objects, integrating their session types with the session types of classes. The result is an elegant unification of communication channels and their session types, distributed object-oriented programming, and a form of typestates supporting non-uniform objects, i.e. objects that dynamically change the set of available methods. We define syntax, operational semantics, a sound type system, and a correct and complete type checking algorithm for a small distributed class-based object-oriented language. Static typing guarantees that both sequences of messages on channels, and sequences of method calls on objects, conform to type-theoretic specifications, thus ensuring type-safety. The language includes expected features of session types, such as delegation, and expected features of object-oriented programming, such as encapsulation of local state. We also describe a prototype implementation as an extension of Java.},
  isbn = {978-1-60558-479-9},
  keywords = {non-uniform method availability,object-oriented calculus,session types,typestates},
  file = {/users/marsor/Zotero/storage/9XVMVQT3/Gay et al. - 2010 - Modular session types for distributed object-orien.pdf}
}
